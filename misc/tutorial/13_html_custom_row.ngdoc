@ngdoc overview
@name Tutorial: Custom row template with Html
@description



@example
<example module="app">
  <file name="app.js">

    angular.module('app', ['ui.grid'])
    .directive('uiCustomCell', [function(){
      return {
        require: '^uiCustomRow',
        restrict: 'E',
        transclude: true,
        link: function($scope, element, attrs, controller, transclude) {
          var template = false;

          transclude(function(clone,scope){
            var cellTemplate = angular.element('<div>').append(clone).html().trim();

            if(cellTemplate.length > 0)
              template = cellTemplate;
          });

          controller.addField(attrs.uiCustomCellTitle, template);
        }
      };
    }])

    .directive('uiCustomRow', ['$q', '$compile', function($q, $compile){
      return {
        require: '^uiGrid',
        restrict: 'E',
        scope: {
          show: '=uiCustomRowShow',
        },
        controller: function($scope, $element, $attrs, $transclude){

          $scope.fields = [];
          var customNameId = 0;

          this.addField = function(displayName, template){
            $scope.fields.push({
              field: 'custom' + (customNameId++),
              displayName: displayName,
              cellTemplate: template,
            });
          };
        },
        compile:function(element, attrs){

          var rowTemplate = element.html().replace(/\$row/mg, 'row.entity')
          element.contents().remove();

          var compiledTemplate = $compile(rowTemplate);

          if(rowTemplate.indexOf('<ui-custom-cell') !== -1){
            element.append(rowTemplate);
          }

          return function($scope, element, attrs, controller, transclude) {

            if(typeof $scope.show === 'undefined')
              $scope.show = true;


            $scope.$watch('show', function(show){

              console.log('show value', show);

              if(!show) return;

              if($scope.fields.length > 0){
                console.log('column def');
                controller.grid.options.columnDefs = $scope.fields;
              }
              else{
                console.log('template row')
                var deferred  = $q.defer();

                if(rowTemplate.length > 0){
                  controller.grid.getRowTemplateFn = deferred.promise;
                  deferred.resolve(compiledTemplate);
                }
              }
            });// end watch
          }
        },
      };
    }])


    .controller('ctrl', function($scope, $http){

      $scope.gridOptions = {};
      $scope.mobile = true;


      $http.get('/data/100.json')
      .success(function(data) {
        $scope.gridOptions.data = data;
      });
    });

  </file>
  <file name="index.html">
    <div ng-controller="ctrl">
      <a ng-click="mobile = !mobile" >toggle</a>
      mobile view: {{ mobile }}
      <div ui-grid="gridOptions" style="height: 1000px">

        <ui-custom-row ui-custom-row-show="!mobile" >
          <ui-custom-cell ui-custom-cell-title="Name">
            {{ $row.name }}
          </ui-custom-cell>

          <ui-custom-cell ui-custom-cell-title="M/F">
            <span ng-style="($row.gender == 'female')? {color: 'pink'}: {color: 'blue'}">
              {{ $row.name }} is working for {{ $row.company }}
            </span>
          </ui-custom-cell>
        </ui-custom-row>

        <ui-custom-row ui-custom-row-show="mobile">
          <ui-custom-cell ui-custom-cell-title="Name">
            {{ $row.name }}
          </ui-custom-cell>

          </ui-custom-cell>

        </ui-custom-row>

        <ui-custom-row ui-custom-row-show="false">
          <p>{{ $row.name }}!!</p>
        </ui-custom-row>
      </div>

    </div>
  </file>
</example>
