@ngdoc overview
@name Tutorial: Custom row template with Html
@description



@example
<example module="app">
  <file name="app.js">

    angular.module('app', ['ui.grid'])
    .directive('uiCustomCell', [function(){
      return {
        require: '^uiCustomRow',
        restrict: 'E',
        transclude: true,
        link: function($scope, element, attrs, controller, transclude) {
          var template = false;

          transclude(function(clone,scope){
            var cellTemplate = angular.element('<div>').append(clone).html().trim();

            if(cellTemplate.length > 0)
              template = cellTemplate;
          });

          controller.addField(attrs.uiCellTitle, template);
        }
      };
    }])

    .directive('uiCustomRow', [function(){
      return {
        require: '^uiGrid',
        restrict: 'E',
        controller: function($scope, $element, $attrs, $transclude){

          $scope.fields = [];
          var customNameId = 0;

          this.addField = function(displayName, template){
            $scope.fields.push({
              field: 'custom' + (customNameId++),
              displayName: displayName,
              cellTemplate: template,
            });
          };
        },
        link: {
          post: function($scope, iElm, iAttrs, controller) {

            if($scope.fields.length > 0)
              controller.grid.options.columnDefs = $scope.fields;
          }
        }
      };
    }])


    .controller('ctrl', function($scope, $http){

      $scope.gridOptions = {};

      $http.get('/data/100.json')
      .success(function(data) {
        $scope.gridOptions.data = data;
      });
    });

  </file>
  <file name="index.html">
    <div ng-controller="ctrl">
      <div ui-grid="gridOptions" style="height: 1000px">
        <ui-custom-row >
          <ui-custom-cell ui-cell-title="Name">
            {{ row.entity.name }}
          </ui-custom-cell>
          <ui-custom-cell ui-cell-title="M/F">
            <span ng-style="(row.entity.gender == 'female')? {color: 'pink'}: {color: 'blue'}">
              {{ row.entity.name }} is working for {{ row.entity.company }}
            </span>
          </ui-custom-cell>
        </ui-custom-row>
      </div>
    </div>
  </file>
</example>